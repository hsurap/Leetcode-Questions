// Given an integer array arr, find the contiguous subarray (containing at least one number) which has the largest sum and return its sum.

// A subarray is a contiguous part of an array.

// Example 1:

// Input: arr = [-2,1,-3,4,-1,2,1,-5,4]
// Output: 6
// Explanation: [4,-1,2,1] has the largest sum = 6.
class Solution {
public:
    int maxSubArray(vector<int>& arr) {
        int max_sum = INT_MIN;
        int cur_sum = 0;
    int n = arr.size();
    
    for (int i = 0; i < n; i++)
    {
       cur_sum +=arr[i];
        max_sum = max(cur_sum, max_sum);
        if(cur_sum<0)
            cur_sum= 0;
        
    }
        return max_sum;

    }
};
